# The region for which all metrics passing through this server will be persisted
region: <%= @setting['api_region'] %>

# Whether this server is running on a secure port
accessedViaHttps: false

# Topic for publishing metrics to
metricsTopic: metrics

# Topic for publishing domain events to
eventsTopic: events

kafka:
  brokerUris: 
<%- @setting['kafka']['hostname'].split(',').each do |host| %>
    - <%= host %>:9092
<%- end %>
  zookeeperUris:
<%- @setting['zookeeper']['hostname'].split(',').each do |host| %>
    - <%= host %>:2181
<%- end %>
  healthCheckTopic: healthcheck

mysql:
  driverClass: com.mysql.jdbc.Driver
  url: jdbc:mysql://<%= @creds['mysql']['hostname']%>:3306/<%=@creds['mysql']['schema']%>?connectTimeout=5000&autoReconnect=true
  user: <%=@creds['mysql']['username'] %>
  password: <%=@creds['mysql']['password'] %>
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 8
  maxSize: 32
  checkConnectionWhileIdle: false
  checkConnectionOnBorrow: true

databaseConfiguration:
<%- if @setting['database-configuration']['database-type'] == 'vertica' %>
# vertica | influxdb
  databaseType: vertica

# Uncomment if databaseType is influxDB
#influxDB:
#  name: mon
#  replicationFactor: 1
#  url: http://127.0.0.1:8086
#  user:  root
#  password: root

# Uncomment if databaseType is vertica
vertica:
  driverClass: com.vertica.jdbc.Driver
  url: jdbc:vertica://<%= @creds['vertica']['hostname']%>/<%=@creds['vertica']['schema']%>
  user: <%=@creds['vertica']['username'] %>
  password: <%=@creds['vertica']['password'] %>
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 4
  maxSize: 32
  checkConnectionWhileIdle: false  
<%- else %>
# vertica | influxdb
  databaseType: influxdb

# Uncomment if databaseType is influxDB
influxDB:
  name: <%= @setting['influxdb']['dbname'] %>
  replicationFactor: 1
  url: http://<%= @setting['influxdb']['hostname'] %>:8086
  user: <%=@creds['influxdb']['username'] %>
  password: <%=@creds['influxdb']['password'] %>

# Uncomment if databaseType is vertica
# As of 7/10 there is a bug in the monasca-api that requires this section even if databaseType is set to influxdb
vertica:
  driverClass: com.vertica.jdbc.Driver
  url: jdbc:vertica://localhost/mon
  user: dbadmin
  password: password
  maxWaitForConnection: 1s
  validationQuery: "/* MyService Health Check */ SELECT 1"
  minSize: 4
  maxSize: 32
  checkConnectionWhileIdle: false  
<%- end %>

middleware:
  enabled: true
  serviceIds: 100
  endpointIds: 160
  serverVIP: <%= @creds['middleware']['serverVip'] %>
  serverPort: 5000
  connTimeout: 500
  connSSLClientAuth: true
  connPoolMaxActive: 3
  connPoolMaxIdle: 3
  connPoolEvictPeriod: 600000
  connPoolMinIdleTime: 600000
  connRetryTimes: 2
  connRetryInterval: 50
  defaultAuthorizedRoles: [user, domainuser, domainadmin,_member_]
  agentAuthorizedRoles: [monasca-agent]
  adminAuthMethod: <%= @creds['middleware']['adminAuthMethod'] %>
  adminUser: <%= @creds['middleware']['adminUser'] %>
  adminPassword: <%= @creds['middleware']['adminPassword'] %>
  adminToken: <%= @creds['middleware']['adminToken'] %> 
  timeToCacheToken: 600
  maxTokenCacheSize: 1048576

server:
  applicationConnectors:
    - type: http
      maxRequestHeaderSize: 16KiB  # Allow large headers used by keystone tokens

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG

  appenders:
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout
      logFormat: # TODO

    - type: file
      currentLogFilename: /var/log/monasca/monasca-api.log
      threshold: ALL
      archive: true
      archivedLogFilenamePattern: /var/log/monasca/monasca-api-%d.log.gz
      archivedFileCount: 5
      timeZone: UTC
      logFormat: # TODO

    - type: syslog
      host: localhost
      port: 514
      facility: local0
      threshold: ALL
      logFormat: # TODO
